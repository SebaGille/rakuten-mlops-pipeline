version: "3.9"

services:
  postgres:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: mlflow
      POSTGRES_PASSWORD: mlflow
      POSTGRES_DB: mlflow
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  mlflow:
    build:
      context: .
      dockerfile: Dockerfile.mlflow
    restart: always
    depends_on:
      - postgres
    environment:
      BACKEND_STORE_URI: postgresql://mlflow:mlflow@postgres:5432/mlflow
      # S3 Configuration
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_DEFAULT_REGION: ${AWS_DEFAULT_REGION:-eu-west-1}
      S3_BUCKET_NAME: ${S3_BUCKET_NAME}
    ports:
      - "5000:5000"
    command: >
      mlflow server
      --backend-store-uri postgresql://mlflow:mlflow@postgres:5432/mlflow
      --default-artifact-root s3://${S3_BUCKET_NAME}/mlflow-artifacts
      --host 0.0.0.0
      --port 5000
      --allowed-hosts '*'

  rakuten_api:
    build:
      context: .
      dockerfile: Dockerfile.api
    depends_on:
      - mlflow
    environment:
      MLFLOW_TRACKING_URI: http://mlflow:5000
      MODEL_NAME: rakuten-baseline
      MODEL_STAGE: Production
      # S3 Configuration for artifact access
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_DEFAULT_REGION: ${AWS_DEFAULT_REGION:-eu-west-1}
      S3_BUCKET_NAME: ${S3_BUCKET_NAME}
    ports:
      - "8000:8000"
    volumes:
      - ./data/monitoring:/app/data/monitoring

volumes:
  postgres_data:
