name: Drift Monitor (daily)

on:
  schedule:
    - cron: "0 7 * * *"   # tous les jours à 07:00 UTC (09:00 Paris en hiver, 08:00 en été)
  workflow_dispatch:

permissions:
  contents: read
  issues: write

jobs:
  drift-check:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    concurrency:
      group: drift-monitor
      cancel-in-progress: false

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps (minimal set)
        run: |
          python -m pip install -U pip
          pip install -r requirements.txt
          # en cas de pin Evidently dans ton venv local, on force ici aussi
          python -m pip install "evidently==0.4.27"

      - name: Run drift check
        id: drift
        continue-on-error: true
        run: |
          python src/monitoring/generate_evidently.py || true
          python src/monitoring/check_drift.py
          echo "exit_code=$?" >> $GITHUB_OUTPUT

      - name: Upload Evidently artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: evidently-report
          path: |
            reports/evidently/evidently_report.html
            reports/evidently/evidently_report.json
            reports/evidently/drift_status.json
          if-no-files-found: ignore
          retention-days: 7

      - name: Read drift status
        id: status
        if: always()
        run: |
          if [ -f reports/evidently/drift_status.json ]; then
            echo "status=$(cat reports/evidently/drift_status.json | tr -d '\n')" >> $GITHUB_OUTPUT
          else
            echo 'status={"error":"no status file"}' >> $GITHUB_OUTPUT
          fi

      - name: Open an issue if drift threshold exceeded
        if: steps.drift.outputs.exit_code != '0'
        uses: actions/github-script@v7
        env:
          DRIFT_STATUS: ${{ steps.status.outputs.status }}
        with:
          script: |
            const status = JSON.parse(process.env.DRIFT_STATUS);
            const title = `⚠️ Drift threshold exceeded: retraining recommended`;
            const body = [
              `**Date (UTC):** ${new Date().toISOString()}`,
              '',
              '**Drift status JSON:**',
              '```json',
              JSON.stringify(status, null, 2),
              '```',
              '',
              'Artifacts:',
              '- Download the latest Evidently report from the workflow run artifacts.',
              '',
              '_This issue was auto-created by the Drift Monitor workflow._'
            ].join('\n');
            const { data: issue } = await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title,
              body,
              labels: ['drift', 'mlops', 'retrain']
            });
            core.info(`Issue created: #${issue.number}`);

